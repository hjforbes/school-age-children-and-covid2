------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\ENCDHFOR\Documents\GitHub\school-age-children-and-covid\analysis\log\00_cr_create_analysis_d
> ataset.log
  log type:  text
 opened on:  26 Jun 2020, 11:49:18

. 
. **************************** HOUSEHOLD VARS*******************************************
. 
. *No kids/kids under 11/up to 18
. *Identify kids under 11, or kids under 18
. gen kids=1 if age<11
(8,671 missing values generated)

. recode kids .=2 if age<18 
(kids: 776 changes made)

. bysort household_id: egen min_kids=min(kids) 
(999 missing values generated)

. gen kids_cat3=min_kids
(999 missing values generated)

. recode kids_cat3 .=0 
(kids_cat3: 999 changes made)

. lab define kids_cat3  0 "No kids" 1 "Kids under 11" 2 "Kids under 18"

. lab val kids_cat3 kids_cat3

. drop min_kids

. drop kids

. 
. *Children aged under18
. gen kids=1 if age<18
(7,895 missing values generated)

. bysort household_id: egen min_kids=min(kids) 
(999 missing values generated)

. gen kids_cat2_0_18yrs=min_kids
(999 missing values generated)

. recode kids_cat2 .=0 
(kids_cat2_0_18yrs: 999 changes made)

. lab define kids_cat2  0 "No kids under 18" 1 "Kids under 18"

. lab val kids_cat2 kids_cat2

. drop min_kids

. drop kids

. 
. *Children aged 1-11
. gen kids=1 if age>=1 & age<11
(8,782 missing values generated)

. bysort household_id: egen min_kids=min(kids) 
(2127 missing values generated)

. gen kids_cat2_1_11yrs=min_kids
(2,127 missing values generated)

. recode kids_cat2_1_11yrs .=0 
(kids_cat2_1_11yrs: 2127 changes made)

. lab define kids_cat2_1_11yrs  0 "No kids aged 1 to under 11" 1 "Kids aged 1 to under 11"

. lab val kids_cat2_1_11yrs kids_cat2_1_11yrs

. drop min_kids

. 
. *Number kids aged 1-11
. bysort household_id: egen number_kids=count(kids)

. drop kids

. 
. 
. 
. /* DROP ALL KIDS, AS HH COMPOSITION VARS ARE MADE */
. drop if age<18
(2,105 observations deleted)

. 
. 
. 
. /* SET FU DATES===============================================================*/ 
. * Censoring dates for each outcome (largely, last date outcome data available)
. global cpnsdeathcensor              = "28/04/2020"

. global onscoviddeathcensor      = "22/05/2020"

. global icnarc_admissioncensor   = "07/05/2020"

. global tpp_infec_censor                 = "26/06/2020"

. 
. *Start dates
. global indexdate                            = "01/03/2020"

. 
. 
. /* CONVERT STRINGS TO DATE====================================================*/
. /* Comorb dates are given with month only, so adding day 15 to enable
>    them to be processed as dates                                                                                
>           */
. 
. foreach var of varlist  chronic_respiratory_disease ///
>                                                 asthma  ///
>                                                 chronic_cardiac_disease  ///
>                                                 diabetes  ///
>                                                 cancer  ///
>                                                 permanent_immunodeficiency  ///
>                                                 temporary_immunodeficiency  ///
>                                                 chronic_liver_disease  ///
>                                                 neurological_disease  ///
>                                                 esrf  ///
>                                                 hypertension  ///
>                                                 ra_sle_psoriasis  ///
>                                                 bmi_date_measured   ///
>                                                 bp_sys_date_measured   ///
>                                                 bp_dias_date_measured   ///
>                                                 creatinine_date  ///
>                                                 smoking_status_date ///
>                                                 {
  2.                                                         
.                 capture confirm string variable `var'
  3.                 if _rc!=0 {
  4.                         assert `var'==.
  5.                         rename `var' `var'_date
  6.                 }
  7.         
.                 else {
  8.                                 replace `var' = `var' + "-15"
  9.                                 rename `var' `var'_dstr
 10.                                 replace `var'_dstr = " " if `var'_dstr == "-15"
 11.                                 gen `var'_date = date(`var'_dstr, "YMD") 
 12.                                 order `var'_date, after(`var'_dstr)
 13.                                 drop `var'_dstr
 14.                 }
 15.         
.         format `var'_date %td
 16. }
variable chronic_respiratory_disease was str7 now str10
(7,895 real changes made)
(6,325 real changes made)
(6,325 missing values generated)
variable asthma was str7 now str10
(7,895 real changes made)
(6,298 real changes made)
(6,298 missing values generated)
variable chronic_cardiac_disease was str7 now str10
(7,895 real changes made)
(6,309 real changes made)
(6,309 missing values generated)
variable diabetes was str7 now str10
(7,895 real changes made)
(6,333 real changes made)
(6,333 missing values generated)
variable cancer was str7 now str10
(7,895 real changes made)
(6,311 real changes made)
(6,311 missing values generated)
variable permanent_immunodeficiency was str7 now str10
(7,895 real changes made)
(6,305 real changes made)
(6,305 missing values generated)
variable temporary_immunodeficiency was str7 now str10
(7,895 real changes made)
(6,338 real changes made)
(6,338 missing values generated)
variable chronic_liver_disease was str7 now str10
(7,895 real changes made)
(6,319 real changes made)
(6,319 missing values generated)
variable neurological_disease was str7 now str10
(7,895 real changes made)
(6,324 real changes made)
(6,324 missing values generated)
variable esrf was str7 now str10
(7,895 real changes made)
(6,328 real changes made)
(6,328 missing values generated)
variable hypertension was str7 now str10
(7,895 real changes made)
(6,301 real changes made)
(6,301 missing values generated)
variable ra_sle_psoriasis was str7 now str10
(7,895 real changes made)
(6,338 real changes made)
(6,338 missing values generated)
variable bmi_date_measured was str7 now str10
(7,895 real changes made)
(408 real changes made)
(408 missing values generated)
variable bp_sys_date_measured was str7 now str10
(7,895 real changes made)
(385 real changes made)
(385 missing values generated)
variable bp_dias_date_measured was str7 now str10
(7,895 real changes made)
(401 real changes made)
(401 missing values generated)
variable creatinine_date was str7 now str10
(7,895 real changes made)
(403 real changes made)
(403 missing values generated)
variable smoking_status_date was str7 now str10
(7,895 real changes made)
(6,355 real changes made)
(6,355 missing values generated)

. 
. * Note - outcome dates are handled separtely below 
. 
. 
. * Some names too long for loops below, shorten
. rename permanent_immunodeficiency perm_immunodef

. rename temporary_immunodeficiency temp_immunodef

. rename bmi_date_measured_date                   bmi_measured_date

. 
. 
. /* CREATE BINARY VARIABLES====================================================*/
. *  Make indicator variables for all conditions where relevant 
. 
. foreach var of varlist  chronic_respiratory_disease ///
>                                                 asthma  ///
>                                                 chronic_cardiac_disease  ///
>                                                 diabetes  ///
>                                                 cancer  ///
>                                                 perm_immunodef  ///
>                                                 temp_immunodef  ///
>                                                 chronic_liver_disease  ///
>                                                 neurological_disease  ///
>                                                 esrf  ///
>                                                 hypertension  ///
>                                                 ra_sle_psoriasis  ///
>                                                 bmi_measured_date   ///
>                                                 bp_sys_date_measured   ///
>                                                 bp_dias_date_measured   ///
>                                                 creatinine_date  ///
>                                                 smoking_status_date ///
>                                                 {
  2.                                                 
.         /* date ranges are applied in python, so presence of date indicates presence of 
>           disease in the correct time frame */ 
.         local newvar =  substr("`var'", 1, length("`var'") - 5)
  3.         gen `newvar' = (`var'!=. )
  4.         order `newvar', after(`var')
  5.         
. }

. 
. 
. /* CREATE VARIABLES===========================================================*/
. 
. /* DEMOGRAPHICS */ 
. 
. * Sex
. gen male = 1 if sex == "M"
(4,010 missing values generated)

. replace male = 0 if sex == "F"
(4,010 real changes made)

. 
. * Ethnicity 
. replace ethnicity = .u if ethnicity == .
(1,976 real changes made, 1,976 to missing)

. 
. label define ethnicity  1 "White"                                       ///
>                                                 2 "Mixed"                                       ///
>                                                 3 "Asian or Asian British"      ///
>                                                 4 "Black"                                       ///
>                                                 5 "Other"                                       ///
>                                                 .u "Unknown"

. 
. label values ethnicity ethnicity

. 
. * STP 
. rename stp stp_old

. bysort stp_old: gen stp = 1 if _n==1
(7,885 missing values generated)

. replace stp = sum(stp)
(7,894 real changes made)

. drop stp_old

. 
. /*  IMD  */
. * Group into 5 groups
. rename imd imd_o

. egen imd = cut(imd_o), group(5) icodes

. 
. * add one to create groups 1 - 5 
. replace imd = imd + 1
(7,895 real changes made)

. 
. * - 1 is missing, should be excluded from population 
. replace imd = .u if imd_o == -1
(0 real changes made)

. drop imd_o

. 
. * Reverse the order (so high is more deprived)
. recode imd 5 = 1 4 = 2 3 = 3 2 = 4 1 = 5 .u = .u
(imd: 7895 changes made)

. 
. label define imd 1 "1 least deprived" 2 "2" 3 "3" 4 "4" 5 "5 most deprived" .u "Unknown"

. label values imd imd 

. 
. /*  Age variables  */ 
. 
. * Create categorised age 
. recode age 18/29.9999 = 1 /// 
>                    30/39.9999 = 2 /// 
>            40/49.9999 = 3 ///
>                    50/59.9999 = 4 ///
>                60/69.9999 = 5 ///
>                    70/79.9999 = 6 ///
>                    80/max = 7, gen(agegroup) 
(7895 differences between age and agegroup)

. 
. label define agegroup   1 "18-<30" ///
>                                                 2 "30-<40" ///
>                                                 3 "40-<50" ///
>                                                 4 "50-<60" ///
>                                                 5 "60-<70" ///
>                                                 6 "70-<80" ///
>                                                 7 "80+"

.                                                 
. label values agegroup agegroup

. 
. * Create binary age (for age stratification)
. recode age min/65.999999999 = 0 ///
>            66/max = 1, gen(age66)
(7895 differences between age and age66)

. 
. * Check there are no missing ages
. assert age < .

. assert agegroup < .

. assert age66 < .

. 
. * Create restricted cubic splines for age
. mkspline age = age, cubic nknots(4)

. 
. 
. /*  Body Mass Index  */
. * NB: watch for missingness
. 
. * Recode strange values 
. replace bmi = . if bmi == 0 
(0 real changes made)

. replace bmi = . if !inrange(bmi, 15, 50)
(680 real changes made, 680 to missing)

. 
. * Restrict to within 10 years of index and aged > 16 
. gen bmi_time = (date("$indexdate", "DMY") - bmi_measured_date)/365.25
(408 missing values generated)

. gen bmi_age = age - bmi_time
(408 missing values generated)

. 
. replace bmi = . if bmi_age < 16 
(2,616 real changes made, 2,616 to missing)

. replace bmi = . if bmi_time > 10 & bmi_time != . 
(2,867 real changes made, 2,867 to missing)

. 
. * Set to missing if no date, and vice versa 
. replace bmi = . if bmi_measured_date == . 
(0 real changes made)

. replace bmi_measured_date = . if bmi == . 
(6,163 real changes made, 6,163 to missing)

. replace bmi_measured = . if bmi == . 
(6,571 real changes made, 6,571 to missing)

. 
. gen     bmicat = .
(7,895 missing values generated)

. recode  bmicat . = 1 if bmi < 18.5
(bmicat: 35 changes made)

. recode  bmicat . = 2 if bmi < 25
(bmicat: 174 changes made)

. recode  bmicat . = 3 if bmi < 30
(bmicat: 220 changes made)

. recode  bmicat . = 4 if bmi < 35
(bmicat: 272 changes made)

. recode  bmicat . = 5 if bmi < 40
(bmicat: 269 changes made)

. recode  bmicat . = 6 if bmi < .
(bmicat: 354 changes made)

. replace bmicat = .u if bmi >= .
(6,571 real changes made, 6,571 to missing)

. 
. label define bmicat 1 "Underweight (<18.5)"     ///
>                                         2 "Normal (18.5-24.9)"          ///
>                                         3 "Overweight (25-29.9)"        ///
>                                         4 "Obese I (30-34.9)"           ///
>                                         5 "Obese II (35-39.9)"          ///
>                                         6 "Obese III (40+)"                     ///
>                                         .u "Unknown (.u)"

.                                         
. label values bmicat bmicat

. 
. * Create less  granular categorisation
. recode bmicat 1/3 .u = 1 4 = 2 5 = 3 6 = 4, gen(obese4cat)
(7860 differences between bmicat and obese4cat)

. 
. label define obese4cat  1 "No record of obesity"        ///
>                                                 2 "Obese I (30-34.9)"           ///
>                                                 3 "Obese II (35-39.9)"          ///
>                                                 4 "Obese III (40+)"             

. 
. label values obese4cat obese4cat

. order obese4cat, after(bmicat)

. 
. 
. /*  Smoking  */
. 
. * Smoking 
. label define smoke 1 "Never" 2 "Former" 3 "Current" .u "Unknown (.u)"

. 
. gen     smoke = 1  if smoking_status == "N"
(7,590 missing values generated)

. replace smoke = 2  if smoking_status == "E"
(144 real changes made)

. replace smoke = 3  if smoking_status == "S"
(968 real changes made)

. replace smoke = .u if smoking_status == "M"
(167 real changes made, 167 to missing)

. replace smoke = .u if smoking_status == "" 
(6,311 real changes made, 6,311 to missing)

. 
. label values smoke smoke

. drop smoking_status

. 
. * Create non-missing 3-category variable for current smoking
. * Assumes missing smoking is never smoking 
. recode smoke .u = 1, gen(smoke_nomiss)
(6478 differences between smoke and smoke_nomiss)

. order smoke_nomiss, after(smoke)

. label values smoke_nomiss smoke

. 
. /* CLINICAL COMORBIDITIES */ 
. 
. /* GP consultation rate: NOT INCLUDED YET  
> replace gp_consult_count = 0 if gp_consult_count <1 
> 
> * those with no count assumed to have no visits 
> replace gp_consult_count = 0 if gp_consult_count == . 
> gen gp_consult = (gp_consult_count >=1)
> */
. 
. /*  Cancer ever - captured in study definition  */
. /*  Immunosuppression  */
. 
. * Immunosuppressed:
. * Permanent immunodeficiency ever, OR 
. * Temporary immunodeficiency  last year
. gen temp1  = 1 if perm_immunodef!=.
(6,305 missing values generated)

. gen temp2  = inrange(temp_immunodef, (date("$indexdate", "DMY") - 365), date("$indexdate", "DMY"))

. 
. egen immunodef_any = rowmax(temp1 temp2)

. drop temp1 temp2 

. order immunodef_any, after(temp_immunodef)

. 
. 
. /* eGFR */
. rename creatinine_date_date creatinine_measured_date

. rename creatinine_date creatinine_measured

. 
. * Set implausible creatinine values to missing (Note: zero changed to missing)
. replace creatinine = . if !inrange(creatinine, 20, 3000) 
(35 real changes made, 35 to missing)

. 
. * Remove creatinine dates if no measurements, and vice versa 
. 
. replace creatinine = . if creatinine_measured_date == . 
(0 real changes made)

. replace creatinine_measured_date = . if creatinine == . 
(35 real changes made, 35 to missing)

. replace creatinine_measured = . if creatinine == . 
(438 real changes made, 438 to missing)

. 
. * Divide by 88.4 (to convert umol/l to mg/dl)
. gen SCr_adj = creatinine/88.4
(438 missing values generated)

. 
. gen min = .
(7,895 missing values generated)

. replace min = SCr_adj/0.7 if male==0
(3,788 real changes made)

. replace min = SCr_adj/0.9 if male==1
(3,669 real changes made)

. replace min = min^-0.329  if male==0
(3,788 real changes made)

. replace min = min^-0.411  if male==1
(3,669 real changes made)

. replace min = 1 if min<1
(2,080 real changes made)

. 
. gen max=.
(7,895 missing values generated)

. replace max=SCr_adj/0.7 if male==0
(3,788 real changes made)

. replace max=SCr_adj/0.9 if male==1
(3,669 real changes made)

. replace max=max^-1.209
(7,457 real changes made)

. replace max=1 if max>1
(5,815 real changes made)

. 
. gen egfr=min*max*141
(438 missing values generated)

. replace egfr=egfr*(0.993^age)
(7,457 real changes made)

. replace egfr=egfr*1.018 if male==0
(3,788 real changes made)

. label var egfr "egfr calculated using CKD-EPI formula with no eth"

. 
. * Categorise into ckd stages
. egen egfr_cat = cut(egfr), at(0, 15, 30, 45, 60, 5000)
(438 missing values generated)

. recode egfr_cat 0 = 5 15 = 4 30 = 3 45 = 2 60 = 0, generate(ckd_egfr)
(7457 differences between egfr_cat and ckd_egfr)

. 
. * 0 = "No CKD"  2 "stage 3a" 3 "stage 3b" 4 "stage 4" 5 "stage 5"
. 
. * Add in end stage renal failure and create a single CKD variable 
. * Missing assumed to not have CKD 
. gen ckd = 0

. replace ckd = 1 if ckd_egfr != . & ckd_egfr >= 1
(92 real changes made)

. replace ckd = 1 if esrf == 1
(1,546 real changes made)

. 
. label define ckd 0 "No CKD" 1 "CKD"

. label values ckd ckd

. label var ckd "CKD stage calc without eth"

. 
. * Create date (most recent measure prior to index)
. gen temp1_ckd_date = creatinine_measured_date if ckd_egfr >=1
(7,803 missing values generated)

. gen temp2_ckd_date = esrf_date if esrf == 1
(6,328 missing values generated)

. gen ckd_date = max(temp1_ckd_date,temp2_ckd_date) 
(6,257 missing values generated)

. format ckd_date %td 

. 
. /*/* Hb1AC */
> 
> /*  Diabetes severity  */
> 
> * Set zero or negative to missing
> replace hba1c_percentage   = . if hba1c_percentage <= 0
> replace hba1c_mmol_per_mol = . if hba1c_mmol_per_mol <= 0
> 
> /* Express  HbA1c as percentage  */ 
> 
> * Express all values as perecentage 
> noi summ hba1c_percentage hba1c_mmol_per_mol 
> gen     hba1c_pct = hba1c_percentage 
> replace hba1c_pct = (hba1c_mmol_per_mol/10.929)+2.15 if hba1c_mmol_per_mol<. 
> 
> * Valid % range between 0-20  
> replace hba1c_pct = . if !inrange(hba1c_pct, 0, 20) 
> replace hba1c_pct = round(hba1c_pct, 0.1)
> 
> /* Categorise hba1c and diabetes  */
> 
> * Group hba1c
> gen     hba1ccat = 0 if hba1c_pct <  6.5
> replace hba1ccat = 1 if hba1c_pct >= 6.5  & hba1c_pct < 7.5
> replace hba1ccat = 2 if hba1c_pct >= 7.5  & hba1c_pct < 8
> replace hba1ccat = 3 if hba1c_pct >= 8    & hba1c_pct < 9
> replace hba1ccat = 4 if hba1c_pct >= 9    & hba1c_pct !=.
> label define hba1ccat 0 "<6.5%" 1">=6.5-7.4" 2">=7.5-7.9" 3">=8-8.9" 4">=9"
> label values hba1ccat hba1ccat
> tab hba1ccat
> 
> * Create diabetes, split by control/not
> gen     diabcat = 1 if diabetes==0
> replace diabcat = 2 if diabetes==1 & inlist(hba1ccat, 0, 1)
> replace diabcat = 3 if diabetes==1 & inlist(hba1ccat, 2, 3, 4)
> replace diabcat = 4 if diabetes==1 & !inlist(hba1ccat, 0, 1, 2, 3, 4)
> 
> label define diabcat    1 "No diabetes"                         ///
>                                                 2 "Controlled diabetes"         ///
>                                                 3 "Uncontrolled diabetes"       ///
>                                                 4 "Diabetes, no hba1c measure"
> label values diabcat diabcat
> 
> * Delete unneeded variables
> drop hba1c_pct hba1c_percentage hba1c_mmol_per_mol
> */
. 
. 
. 
. 
. 
. /* OUTCOME AND SURVIVAL TIME==================================================*/
. 
. /*  Cohort entry and censor dates  */
. * Date of cohort entry, 1 Mar 2020
. gen enter_date = date("$indexdate", "DMY")

. 
. * Date of study end (typically: last date of outcome data available)
. **** NOTE!! NEEDS UPDATING!!!!
. gen cpnsdeathcensor_date                = date("$cpnsdeathcensor",              "DMY")

. gen onscoviddeathcensor_date    = date("$onscoviddeathcensor",  "DMY")

. 
. * Format the dates
. format  enter_date                                      ///
>                 cpnsdeathcensor_date            ///
>                 onscoviddeathcensor_date        %td

. 
. /*   Outcomes   */
. 
. * Dates of: ITU admission, CPNS death, ONS-covid death
. * Recode to dates from the strings 
. foreach var of varlist  died_date_cpns  ///
>                                                 died_date_ons   ///
>                                                 first_tested_for_covid  ///
>                                                 first_positive_test_date                ///
>                                 {
  2.                                                 
.         confirm string variable `var'
  3.         rename `var' `var'_dstr
  4.         gen `var' = date(`var'_dstr, "YMD")
  5.         drop `var'_dstr
  6.         format `var' %td 
  7.         
. }
(6,328 missing values generated)
(6,321 missing values generated)
(6,329 missing values generated)
(6,335 missing values generated)

. 
. * Date of Covid death in ONS
. gen died_date_onscovid = died_date_ons if died_ons_covid_flag_any == 1
(7,591 missing values generated)

. 
. * Date of non-COVID death in ONS 
. * If missing date of death resulting died_date will also be missing
. gen died_date_onsnoncovid = died_date_ons if died_ons_covid_flag_any != 1 
(6,625 missing values generated)

. 
. format died_date_ons %td

. format died_date_onscovid %td 

. format died_date_onsnoncovid %td

. 
. * Binary indicators for outcomes
. gen cpnsdeath           = (died_date_cpns               < .)

. gen onscoviddeath       = (died_date_onscovid   < .)

. gen onsnoncoviddeath = (died_date_onsnoncovid < .)

. 
. /*  Create survival times  */
. 
. * For looping later, name must be stime_binary_outcome_name
. 
. * Survival time = last followup date (first: end study, death, or that outcome)
. gen stime_cpnsdeath     = min(cpnsdeathcensor_date,     died_date_cpns, died_date_ons)

. gen stime_onscoviddeath = min(onscoviddeathcensor_date,                                 died_date_ons)

. 
. * Equivalent to onscoviddeath, but creating a separate variable for clarity 
. gen stime_onsnoncoviddeath = min(onscoviddeathcensor_date, died_date_ons)

. 
. * If outcome was after censoring occurred, set to zero
. replace cpnsdeath               = 0 if (died_date_cpns          > cpnsdeathcensor_date) 
(4 real changes made)

. replace onscoviddeath   = 0 if (died_date_onscovid      > onscoviddeathcensor_date) 
(0 real changes made)

. replace onsnoncoviddeath = 0 if (died_date_onsnoncovid > onscoviddeathcensor_date)
(0 real changes made)

. 
. * Format date variables
. format  stime* %td 

. 
. 
. 
. 
. 
. 
. 
. 
. /* LABEL VARIABLES============================================================*/
. *  Label variables you are intending to keep, drop the rest 
. 
. *HH variable
. label var kids_cat3 "Presence of children or young people in the household"

. label var kids_cat2_0_18yrs "Presence of under 18s in the household"

. label var  kids_cat2_1_11yrs "Presence of children aged 1-<11 years in the household"

. label var  number_kids "Number of children aged 1-<11 years in household"

. label var  household_size "Number people in household"

. label var  household_id "Household ID"

. 
. 
. * Demographics
. label var patient_id                            "Patient ID"

. label var age                                           "Age (years)"

. label var agegroup                                      "Grouped age"

. label var age66                                         "66 years and older"

. label var sex                                           "Sex"

. label var male                                          "Male"

. label var bmi                                           "Body Mass Index (BMI, kg/m2)"

. label var bmicat                                        "Grouped BMI"

. label var bmi_measured_date             "Body Mass Index (BMI, kg/m2), date measured"

. label var obese4cat                                     "Evidence of obesity (4 categories)"

. label var smoke                                         "Smoking status"

. label var smoke_nomiss                          "Smoking status (missing set to non)"

. label var imd                                           "Index of Multiple Deprivation (IMD)"

. label var ethnicity                                     "Ethnicity"

. label var stp                                           "Sustainability and Transformation Partnership"

. 
. label var age1                                          "Age spline 1"

. label var age2                                          "Age spline 2"

. label var age3                                          "Age spline 3"

. 
. * Comorbidities of interest 
. label var asthma                                                "Asthma ever"

. label var ckd                                                   "Chronic kidney disease" 

. label var egfr_cat                                              "Calculated eGFR"

. label var hypertension                              "Diagnosed hypertension"

. label var chronic_respiratory_disease   "Chronic Respiratory Diseases"

. label var chronic_cardiac_disease               "Chronic Cardiac Diseases"

. label var diabetes                                              "Diabetes"

. label var cancer                                                "Cancer"

. label var immunodef_any                                 "Immunosuppressed (combination algorithm)"

. label var chronic_liver_disease                 "Chronic liver disease"

. label var neurological_disease                  "Neurological disease"                                  

. label var ra_sle_psoriasis                              "Autoimmune disease"

. 
. label var asthma_date                                           "Asthma date"

. label var ckd_date                                              "Chronic kidney disease Date" 

. label var hypertension_date                                     "Diagnosed hypertension Date"

. label var chronic_respiratory_disease_date      "Other Respiratory Diseases Date"

. label var chronic_cardiac_disease_date          "Other Heart Diseases Date"

. label var diabetes_date                                         "Diabetes Date"

. label var cancer_date                                           "Cancer Date"

. label var chronic_liver_disease_date            "Chronic liver disease Date"

. label var neurological_disease_date             "Neurological disease  Date"    

. label var ra_sle_psoriasis_date                         "Autoimmune disease  Date"

. 
. * Outcomes and follow-up
. label var enter_date                                    "Date of study entry"

. label var cpnsdeathcensor_date                  "Date of admin censoring for cpns deaths"

. label var onscoviddeathcensor_date              "Date of admin censoring for ONS deaths"

. 
. label var cpnsdeath                                             "Failure/censoring indicator for outcome: CPNS c
> ovid death"

. label var onscoviddeath                                 "Failure/censoring indicator for outcome: ONS covid deat
> h"

. label var onsnoncoviddeath                              "Failure/censoring indicator for outcome: ONS non-covid 
> death"

. 
. label var died_date_cpns                                "Date of CPNS Death"

. label var died_date_onscovid                    "Date of ONS COVID Death"

. label var died_date_onsnoncovid                 "Date of ONS non-COVID death"

. 
. label var first_tested_for_covid                "Date of first COVID test in SGSS"

. label var first_positive_test_date              "Date of first positive COVID test in SGSS"

. 
. * Survival times
. label var  stime_cpnsdeath                              "Survival time (date); outcome CPNS covid death"

. label var  stime_onscoviddeath                  "Survival time (date); outcome ONS covid death"

. label var  stime_onsnoncoviddeath               "Survival tme (date); outcome ONS non covid death"

. 
. 
. /* TIDY DATA==================================================================*/
. *  Drop variables that are not needed (those not labelled)
. ds, not(varlabel)
ethnicity_~e  bp_dias_da~e  smoki~e_date  temp_immun~f  died_ons_c~y  creatinine    min           died_dat~ons
bmi_measured  bp_dias_da~d  smoki~s_date  temp_immu     died_ons_c~g  bmi_time      max
bp_sys_dat~e  creatinine~e  perm_immun~f  esrf_date     bp_sys        bmi_age       temp1_ckd_~e
bp_sys_dat~d  creatinine~d  perm_immu     esrf          bp_dias       SCr_adj       temp2_ckd_~e

. drop `r(varlist)'

.         
. 
. * Close log file 
. log close
      name:  <unnamed>
       log:  C:\Users\ENCDHFOR\Documents\GitHub\school-age-children-and-covid\analysis\log\00_cr_create_analysis_d
> ataset.log
  log type:  text
 closed on:  26 Jun 2020, 11:49:19
------------------------------------------------------------------------------------------------------------------
