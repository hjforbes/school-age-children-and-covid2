---------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  E:\alex\school-age-children-and-covid\analysis\log\01_cr_create_analysis_dataset.log
  log type:  text
 opened on:   8 Jul 2020, 23:25:13

. 
. 
. /* CREATE VARIABLES===========================================================*/
. 
. /* DEMOGRAPHICS */ 
. 
. * Sex
. gen male = 1 if sex == "M"
(13,884,364 missing values generated)

. replace male = 0 if sex == "F"
(13,883,042 real changes made)

. 
. * Ethnicity 
. replace ethnicity = .u if ethnicity == .
(8,996,669 real changes made, 8,996,669 to missing)

. 
. label define ethnicity  1 "White"                                       ///
>                                                 2 "Mixed"                                       ///
>                                                 3 "Asian or Asian British"      ///
>                                                 4 "Black"                                       ///
>                                                 5 "Other"                                       ///
>                                                 .u "Unknown"

. 
. label values ethnicity ethnicity

. 
. * STP 
. rename stp stp_old

. bysort stp_old: gen stp = 1 if _n==1
(27,468,637 missing values generated)

. replace stp = sum(stp)
(27,468,668 real changes made)

. drop stp_old

. 
. /*  IMD  */
. * Group into 5 groups
. rename imd imd_o

. egen imd = cut(imd_o), group(5) icodes

. 
. * add one to create groups 1 - 5 
. replace imd = imd + 1
(27,468,669 real changes made)

. 
. * - 1 is missing, should be excluded from population 
. replace imd = .u if imd_o == -1
(360,252 real changes made, 360,252 to missing)

. drop imd_o

. 
. * Reverse the order (so high is more deprived)
. recode imd 5 = 1 4 = 2 3 = 3 2 = 4 1 = 5 .u = .u
(imd: 21591079 changes made)

. 
. label define imd 1 "1 least deprived" 2 "2" 3 "3" 4 "4" 5 "5 most deprived" .u "Unknown"

. label values imd imd 

. 
. /*  Age variables  */ 
. 
. * Create categorised age 
. recode age 18/29.9999 = 1 /// 
>                    30/39.9999 = 2 /// 
>            40/49.9999 = 3 ///
>                    50/59.9999 = 4 ///
>                60/69.9999 = 5 ///
>                    70/79.9999 = 6 ///
>                    80/max = 7, gen(agegroup) 
(27468669 differences between age and agegroup)

. 
. label define agegroup   1 "18-<30" ///
>                                                 2 "30-<40" ///
>                                                 3 "40-<50" ///
>                                                 4 "50-<60" ///
>                                                 5 "60-<70" ///
>                                                 6 "70-<80" ///
>                                                 7 "80+"

.                                                 
. label values agegroup agegroup

. 
. * Create binary age (for age stratification)
. recode age min/65.999999999 = 0 ///
>            66/max = 1, gen(age66)
(27468669 differences between age and age66)

. 
. * Check there are no missing ages
. assert age < .

. assert agegroup < .

. assert age66 < .

. 
. * Create restricted cubic splines for age
. mkspline age = age, cubic nknots(4)

. 
. 
. 
. 
. 
. /* APPLY HH level INCLUSION/EXCLUIONS==================================================*/ 
. 
. noi di "DROP MISSING GENDER:"
DROP MISSING GENDER:

. recode male .=9
(male: 1322 changes made)

. recode male .u=9
(male: 0 changes made)

. bysort household_id: egen male_drop=max(male)

. drop if male_drop==9
(10,848,094 observations deleted)

. 
. noi di "DROP AGE MISSING:"
DROP AGE MISSING:

. recode age .=9
(age: 0 changes made)

. recode age .u=9
(age: 0 changes made)

. bysort household_id: egen age_drop=max(age)

. drop if age_drop==9
(0 observations deleted)

. 
. noi di "DROP IMD MISSING"
DROP IMD MISSING

. recode imd .=9
(imd: 0 changes made)

. recode imd .u=9
(imd: 197868 changes made)

. bysort household_id: egen imd_drop=max(imd)

. drop if imd_drop==9
(280,361 observations deleted)

. 
. **************************** HOUSEHOLD VARS*******************************************
. 
. *No kids/kids under 12/up to 18
. *Identify kids under 12, or kids under 18
. gen nokids=1 if age<12
(16,340,214 missing values generated)

. recode nokids .=2 if age<18 
(nokids: 0 changes made)

. bysort household_id: egen min_kids=min(nokids) 
(16340214 missing values generated)

. gen kids_cat3=min_kids
(16,340,214 missing values generated)

. recode kids_cat3 .=0 
(kids_cat3: 16340214 changes made)

. lab define kids_cat3  0 "No kids" 1 "Kids under 12" 2 "Kids under 18"

. lab val kids_cat3 kids_cat3

. drop min_kids

. 
. 
. recode nokids 2=.
(nokids: 0 changes made)

. recode nokids 1=. if age<1 
(nokids: 0 changes made)

. *Number kids aged 1-12
. bysort household_id: egen number_kids=count(nokids)

. gen gp_number_kids=number_kids

. recode gp_number_kids 4/max=4
(gp_number_kids: 0 changes made)

. lab var gp_number_kids "Number kids under 12 years in hh"

. drop nokids

. 
. *Number of additional people in household
. bysort household_id: gen additional_people=_N-1

. recode additional_people 4/max=4
(additional_people: 672709 changes made)

. 
. /* DROP ALL KIDS, AS HH COMPOSITION VARS ARE NOW MADE */
. drop if age<18
(0 observations deleted)

. 
. 
. 
. 
. /* SET FU DATES===============================================================*/ 
. * Censoring dates for each outcome (largely, last date outcome data available)
. *****NEEDS UPDATING WHEN INFO AVAILABLE*******************
. global onscoviddeathcensor      = "16/06/2020"

. global icnarc_admissioncensor   = "16/06/2020" /*NOT USING THIS DATE*/

. global tpp_infec_censor                 = "16/06/2020" /*NOT USING THIS DATE*/

. 
. *Start dates
. global indexdate                            = "01/02/2020"

. 
. 
. 
. 
. 
. 
. /* CONVERT STRINGS TO DATE====================================================*/
. /* Comorb dates dates are given with month only, so adding day 
> 15 to enable  them to be processed as dates                                                                                    
>    */
. 
. foreach var of varlist  chronic_respiratory_disease ///
>                                                 chronic_cardiac_disease  ///
>                                                 diabetes  ///
>                                                 cancer_haem  ///
>                                                 cancer_nonhaem  ///
>                                                 permanent_immunodeficiency  ///
>                                                 temporary_immunodeficiency  ///
>                                                 organ_trans                     /// 
>                                                 asplenia                        /// 
>                                                 chronic_liver_disease  ///
>                                                 other_neuro  ///
>                                                 stroke_dementia                         ///
>                                                 esrf  ///
>                                                 hypertension  ///
>                                                 ra_sle_psoriasis  ///
>                                                 bmi_date_measured   ///
>                                                 bp_sys_date_measured   ///
>                                                 bp_dias_date_measured   ///
>                                                 creatinine_date  ///
>                                                 smoking_status_date ///
>                                                 {
  2.                                                         
.                 capture confirm string variable `var'
  3.                 if _rc!=0 {
  4.                         assert `var'==.
  5.                         rename `var' `var'_date
  6.                 }
  7.         
.                 else {
  8.                                 replace `var' = `var' + "-15"
  9.                                 rename `var' `var'_dstr
 10.                                 replace `var'_dstr = " " if `var'_dstr == "-15"
 11.                                 gen `var'_date = date(`var'_dstr, "YMD") 
 12.                                 order `var'_date, after(`var'_dstr)
 13.                                 drop `var'_dstr
 14.                 }
 15.         
.         format `var'_date %td
 16. }
variable chronic_respiratory_disease was str7 now str10
(16,340,214 real changes made)
(15,674,923 real changes made)
(15,674,923 missing values generated)
variable chronic_cardiac_disease was str7 now str10
(16,340,214 real changes made)
(15,234,400 real changes made)
(15,234,400 missing values generated)
variable diabetes was str7 now str10
(16,340,214 real changes made)
(14,700,851 real changes made)
(14,700,851 missing values generated)
variable cancer_haem was str7 now str10
(16,340,214 real changes made)
(16,244,834 real changes made)
(16,244,834 missing values generated)
variable cancer_nonhaem was str7 now str10
(16,340,214 real changes made)
(15,531,343 real changes made)
(15,531,343 missing values generated)
variable permanent_immunodeficiency was str7 now str10
(16,340,214 real changes made)
(16,066,848 real changes made)
(16,066,848 missing values generated)
variable temporary_immunodeficiency was str7 now str10
(16,340,214 real changes made)
(16,336,001 real changes made)
(16,336,001 missing values generated)
variable organ_trans was str7 now str10
(16,340,214 real changes made)
(16,321,602 real changes made)
(16,321,602 missing values generated)
variable asplenia was str7 now str10
(16,340,214 real changes made)
(16,317,085 real changes made)
(16,317,085 missing values generated)
variable chronic_liver_disease was str7 now str10
(16,340,214 real changes made)
(16,241,411 real changes made)
(16,241,411 missing values generated)
variable other_neuro was str7 now str10
(16,340,214 real changes made)
(16,176,655 real changes made)
(16,176,655 missing values generated)
variable stroke_dementia was str7 now str10
(16,340,214 real changes made)
(15,952,885 real changes made)
(15,952,885 missing values generated)
variable esrf was str7 now str10
(16,340,214 real changes made)
(16,317,030 real changes made)
(16,317,030 missing values generated)
variable hypertension was str7 now str10
(16,340,214 real changes made)
(12,944,137 real changes made)
(12,944,137 missing values generated)
variable ra_sle_psoriasis was str7 now str10
(16,340,214 real changes made)
(15,524,367 real changes made)
(15,524,367 missing values generated)
variable bmi_date_measured was str7 now str10
(16,340,214 real changes made)
(3,194,184 real changes made)
(3,194,184 missing values generated)
variable bp_sys_date_measured was str7 now str10
(16,340,214 real changes made)
(1,771,947 real changes made)
(1,771,947 missing values generated)
variable bp_dias_date_measured was str7 now str10
(16,340,214 real changes made)
(1,773,805 real changes made)
(1,773,805 missing values generated)
variable creatinine_date was str7 now str10
(16,340,214 real changes made)
(4,314,536 real changes made)
(4,314,536 missing values generated)
variable smoking_status_date was str7 now str10
(16,340,214 real changes made)
(734,233 real changes made)
(734,233 missing values generated)

. 
. * Note - outcome dates are handled separtely below 
. 
. 
. * Some names too long for loops below, shorten
. rename permanent_immunodeficiency_date  perm_immunodef_date

. rename temporary_immunodeficiency_date  temp_immunodef_date

. rename bmi_date_measured_date                   bmi_measured_date

. 
. /* CREATE BINARY VARIABLES====================================================*/
. *  Make indicator variables for all conditions where relevant 
. 
. foreach var of varlist  chronic_respiratory_disease ///
>                                                 chronic_cardiac_disease  ///
>                                                 diabetes  ///
>                                                 cancer_haem  ///
>                                                 cancer_nonhaem  ///
>                                                 perm_immunodef  ///
>                                                 temp_immunodef  ///
>                                                 organ_trans                     /// 
>                                                 asplenia                        /// 
>                                                 chronic_liver_disease  ///
>                                                 other_neuro  ///
>                                                 stroke_dementia                         ///
>                                                 esrf  ///
>                                                 hypertension  ///
>                                                 ra_sle_psoriasis  ///
>                                                 bmi_measured_date   ///
>                                                 bp_sys_date_measured   ///
>                                                 bp_dias_date_measured   ///
>                                                 creatinine_date  ///
>                                                 smoking_status_date ///
>                                                 {
  2.                                                 
.         /* date ranges are applied in python, so presence of date indicates presence of 
>           disease in the correct time frame */ 
.         local newvar =  substr("`var'", 1, length("`var'") - 5)
  3.         gen `newvar' = (`var'!=. )
  4.         order `newvar', after(`var')
  5.         
. }

. 
. 
. 
. 
. /*  Body Mass Index  */
. * NB: watch for missingness
. 
. * Recode strange values 
. replace bmi = . if bmi == 0 
(3,244,085 real changes made, 3,244,085 to missing)

. replace bmi = . if !inrange(bmi, 15, 50)
(125,504 real changes made, 125,504 to missing)

. 
. * Restrict to within 10 years of index and aged > 16 
. gen bmi_time = (date("$indexdate", "DMY") - bmi_measured_date)/365.25
(3,194,184 missing values generated)

. gen bmi_age = age - bmi_time
(3,194,184 missing values generated)

. 
. replace bmi = . if bmi_age < 16 
(44,372 real changes made, 44,372 to missing)

. replace bmi = . if bmi_time > 10 & bmi_time != . 
(0 real changes made)

. 
. * Set to missing if no date, and vice versa 
. replace bmi = . if bmi_measured_date == . 
(0 real changes made)

. replace bmi_measured_date = . if bmi == . 
(219,777 real changes made, 219,777 to missing)

. replace bmi_measured = . if bmi == . 
(3,413,961 real changes made, 3,413,961 to missing)

. 
. gen     bmicat = .
(16,340,214 missing values generated)

. recode  bmicat . = 1 if bmi < 18.5
(bmicat: 311061 changes made)

. recode  bmicat . = 2 if bmi < 25
(bmicat: 4664362 changes made)

. recode  bmicat . = 3 if bmi < 30
(bmicat: 4421181 changes made)

. recode  bmicat . = 4 if bmi < 35
(bmicat: 2230497 changes made)

. recode  bmicat . = 5 if bmi < 40
(bmicat: 863724 changes made)

. recode  bmicat . = 6 if bmi < .
(bmicat: 435428 changes made)

. replace bmicat = .u if bmi >= .
(3,413,961 real changes made, 3,413,961 to missing)

. 
. label define bmicat 1 "Underweight (<18.5)"     ///
>                                         2 "Normal (18.5-24.9)"          ///
>                                         3 "Overweight (25-29.9)"        ///
>                                         4 "Obese I (30-34.9)"           ///
>                                         5 "Obese II (35-39.9)"          ///
>                                         6 "Obese III (40+)"                     ///
>                                         .u "Unknown (.u)"

.                                         
. label values bmicat bmicat

. 
. * Create less  granular categorisation
. recode bmicat 1/3 .u = 1 4 = 2 5 = 3 6 = 4, gen(obese4cat)
(16029153 differences between bmicat and obese4cat)

. 
. label define obese4cat  1 "No record of obesity"        ///
>                                                 2 "Obese I (30-34.9)"           ///
>                                                 3 "Obese II (35-39.9)"          ///
>                                                 4 "Obese III (40+)"             

. 
. label values obese4cat obese4cat

. order obese4cat, after(bmicat)

. 
. 
. /*  Smoking  */
. 
. * Smoking 
. label define smoke 1 "Never" 2 "Former" 3 "Current" .u "Unknown (.u)"

. 
. gen     smoke = 1  if smoking_status == "N"
(8,864,872 missing values generated)

. replace smoke = 2  if smoking_status == "E"
(5,276,264 real changes made)

. replace smoke = 3  if smoking_status == "S"
(2,854,375 real changes made)

. replace smoke = .u if smoking_status == "M"
(734,233 real changes made, 734,233 to missing)

. replace smoke = .u if smoking_status == "" 
(0 real changes made)

. 
. label values smoke smoke

. drop smoking_status

. 
. * Create non-missing 3-category variable for current smoking
. * Assumes missing smoking is never smoking 
. recode smoke .u = 1, gen(smoke_nomiss)
(734233 differences between smoke and smoke_nomiss)

. order smoke_nomiss, after(smoke)

. label values smoke_nomiss smoke

. 
. /* CLINICAL COMORBIDITIES */ 
. 
. /*  Cancer */
. label define cancer 1 "Never" 2 "Last year" 3 "2-5 years ago" 4 "5+ years"

. 
. * Haematological malignancies
. gen     cancer_haem_cat = 4 if inrange(cancer_haem_date, d(1/1/1900), d(1/2/2015))
(16,281,929 missing values generated)

. replace cancer_haem_cat = 3 if inrange(cancer_haem_date, d(1/2/2015), d(1/2/2019))
(25,589 real changes made)

. replace cancer_haem_cat = 2 if inrange(cancer_haem_date, d(1/2/2019), d(1/2/2020))
(8,276 real changes made)

. recode  cancer_haem_cat . = 1
(cancer_haem_cat: 16248064 changes made)

. label values cancer_haem_cat cancer

. 
. 
. * All other cancers
. gen     cancer_exhaem_cat = 4 if inrange(cancer_nonhaem_date,  d(1/1/1900), d(1/2/2015)) 
(15,843,668 missing values generated)

. replace cancer_exhaem_cat = 3 if inrange(cancer_nonhaem_date,  d(1/2/2015), d(1/2/2019))
(212,153 real changes made)

. replace cancer_exhaem_cat = 2 if inrange(cancer_nonhaem_date,  d(1/2/2019), d(1/2/2020)) 
(72,861 real changes made)

. recode  cancer_exhaem_cat . = 1
(cancer_exhaem_cat: 15558654 changes made)

. label values cancer_exhaem_cat cancer

. 
. 
. /*  Immunosuppression  */
. 
. * Immunosuppressed:
. * Permanent immunodeficiency ever, OR 
. * Temporary immunodeficiency  last year
. gen temp1  = 1 if perm_immunodef_date!=.
(16,066,848 missing values generated)

. gen temp2  = inrange(temp_immunodef_date, (date("$indexdate", "DMY") - 365), date("$indexdate", "DMY"))

. 
. egen other_immuno = rowmax(temp1 temp2)

. drop temp1 temp2 

. order other_immuno, after(temp_immunodef)

. 
. /*  Blood pressure   */
. 
. * Categorise
. gen     bpcat = 1 if bp_sys < 120 &  bp_dias < 80
(10,881,617 missing values generated)

. replace bpcat = 2 if inrange(bp_sys, 120, 130) & bp_dias<80
(2,801,469 real changes made)

. replace bpcat = 3 if inrange(bp_sys, 130, 140) | inrange(bp_dias, 80, 90)
(7,359,615 real changes made)

. replace bpcat = 4 if (bp_sys>=140 & bp_sys<.) | (bp_dias>=90 & bp_dias<.) 
(3,408,259 real changes made)

. replace bpcat = .u if bp_sys>=. | bp_dias>=. | bp_sys==0 | bp_dias==0
(1,778,612 real changes made, 1,778,612 to missing)

. 
. label define bpcat 1 "Normal" 2 "Elevated" 3 "High, stage I"    ///
>                                         4 "High, stage II" .u "Unknown"

. label values bpcat bpcat

. 
. recode bpcat .u=1, gen(bpcat_nomiss)
(1778612 differences between bpcat and bpcat_nomiss)

. label values bpcat_nomiss bpcat

. 
. * Create non-missing indicator of known high blood pressure
. gen bphigh = (bpcat==4)

. 
. /*  Hypertension  */
. 
. gen htdiag_or_highbp = bphigh

. recode htdiag_or_highbp 0 = 1 if hypertension==1 
(htdiag_or_highbp: 2026774 changes made)

. 
. 
. ************
. *   eGFR   *
. ************
. 
. * Set implausible creatinine values to missing (Note: zero changed to missing)
. replace creatinine = . if !inrange(creatinine, 20, 3000) 
(4,349,692 real changes made, 4,349,692 to missing)

.         
. * Divide by 88.4 (to convert umol/l to mg/dl)
. gen SCr_adj = creatinine/88.4
(4,349,692 missing values generated)

. 
. gen min=.
(16,340,214 missing values generated)

. replace min = SCr_adj/0.7 if male==0
(6,560,118 real changes made)

. replace min = SCr_adj/0.9 if male==1
(5,430,404 real changes made)

. replace min = min^-0.329  if male==0
(6,560,118 real changes made)

. replace min = min^-0.411  if male==1
(5,430,404 real changes made)

. replace min = 1 if min<1
(7,867,079 real changes made)

. 
. gen max=.
(16,340,214 missing values generated)

. replace max=SCr_adj/0.7 if male==0
(6,560,118 real changes made)

. replace max=SCr_adj/0.9 if male==1
(5,430,404 real changes made)

. replace max=max^-1.209
(11,990,522 real changes made)

. replace max=1 if max>1
(8,473,135 real changes made)

. 
. gen egfr=min*max*141
(4,349,692 missing values generated)

. replace egfr=egfr*(0.993^age)
(11,990,522 real changes made)

. replace egfr=egfr*1.018 if male==0
(6,560,118 real changes made)

. label var egfr "egfr calculated using CKD-EPI formula with no eth"

. 
. * Categorise into ckd stages
. egen egfr_cat = cut(egfr), at(0, 15, 30, 45, 60, 5000)
(4349692 missing values generated)

. recode egfr_cat 0=5 15=4 30=3 45=2 60=0, generate(ckd)
(11990522 differences between egfr_cat and ckd)

. * 0 = "No CKD"  2 "stage 3a" 3 "stage 3b" 4 "stage 4" 5 "stage 5"
. label define ckd 0 "No CKD" 1 "CKD"

. label values ckd ckd

. *label var ckd "CKD stage calc without eth"
. 
. * Convert into CKD group
. *recode ckd 2/5=1, gen(chronic_kidney_disease)
. *replace chronic_kidney_disease = 0 if creatinine==. 
.         
. recode ckd 0=1 2/3=2 4/5=3, gen(reduced_kidney_function_cat)
(11300389 differences between ckd and reduced_kidney_function_cat)

. replace reduced_kidney_function_cat = 1 if creatinine==. 
(4,349,692 real changes made)

. label define reduced_kidney_function_catlab ///
>         1 "None" 2 "Stage 3a/3b egfr 30-60      " 3 "Stage 4/5 egfr<30"

. label values reduced_kidney_function_cat reduced_kidney_function_catlab 

. lab var  reduced "Reduced kidney function"

. 
. 
. /*/* Hb1AC */
> 
> /*  Diabetes severity  */
> 
> * Set zero or negative to missing
> replace hba1c_percentage   = . if hba1c_percentage <= 0
> replace hba1c_mmol_per_mol = . if hba1c_mmol_per_mol <= 0
> 
> /* Express  HbA1c as percentage  */ 
> 
> * Express all values as perecentage 
> noi summ hba1c_percentage hba1c_mmol_per_mol 
> gen     hba1c_pct = hba1c_percentage 
> replace hba1c_pct = (hba1c_mmol_per_mol/10.929)+2.15 if hba1c_mmol_per_mol<. 
> 
> * Valid % range between 0-20  
> replace hba1c_pct = . if !inrange(hba1c_pct, 0, 20) 
> replace hba1c_pct = round(hba1c_pct, 0.1)
> 
> /* Categorise hba1c and diabetes  */
> 
> * Group hba1c
> gen     hba1ccat = 0 if hba1c_pct <  6.5
> replace hba1ccat = 1 if hba1c_pct >= 6.5  & hba1c_pct < 7.5
> replace hba1ccat = 2 if hba1c_pct >= 7.5  & hba1c_pct < 8
> replace hba1ccat = 3 if hba1c_pct >= 8    & hba1c_pct < 9
> replace hba1ccat = 4 if hba1c_pct >= 9    & hba1c_pct !=.
> label define hba1ccat 0 "<6.5%" 1">=6.5-7.4" 2">=7.5-7.9" 3">=8-8.9" 4">=9"
> label values hba1ccat hba1ccat
> tab hba1ccat
> 
> * Create diabetes, split by control/not
> gen     diabcat = 1 if diabetes==0
> replace diabcat = 2 if diabetes==1 & inlist(hba1ccat, 0, 1)
> replace diabcat = 3 if diabetes==1 & inlist(hba1ccat, 2, 3, 4)
> replace diabcat = 4 if diabetes==1 & !inlist(hba1ccat, 0, 1, 2, 3, 4)
> 
> label define diabcat    1 "No diabetes"                         ///
>                                                 2 "Controlled diabetes"         ///
>                                                 3 "Uncontrolled diabetes"       ///
>                                                 4 "Diabetes, no hba1c measure"
> label values diabcat diabcat
> 
> * Delete unneeded variables
> drop hba1c_pct hba1c_percentage hba1c_mmol_per_mol
> */
. 
. 
. 
. /*  Asthma  */
. 
. 
. * Asthma  (coded: 0 No, 1 Yes no OCS, 2 Yes with OCS)
. rename asthma asthmacat

. recode asthmacat 0=1 1=2 2=3
(asthmacat: 16340214 changes made)

. label define asthmacat 1 "No" 2 "Yes, no OCS" 3 "Yes with OCS"

. label values asthmacat asthmacat

. 
. gen asthma = (asthmacat==2|asthmacat==3)

. 
. /*  Probable shielding  */
. *need to add renal replacement therapy*
. gen shield=1 if organ_trans==1 | asthmacat==2 | asthmacat==3 | ///
> chronic_respiratory_disease==1 | cancer_haem==1 | cancer_nonhaem==1 | ///
> asplenia==1 | other_immuno==1
(12,348,836 missing values generated)

. recode shield .=0
(shield: 12348836 changes made)

. 
. 
. /* OUTCOME AND SURVIVAL TIME==================================================*/
. 
. /*  Cohort entry and censor dates  */
. * Date of cohort entry, 1 Mar 2020
. gen enter_date = date("$indexdate", "DMY")

. 
. * Date of study end (typically: last date of outcome data available)
. **** NOTE!! NEEDS UPDATING!!!!
. gen onscoviddeathcensor_date        = date("$onscoviddeathcensor",      "DMY")

. gen icnarc_admissioncensor_date         = date("$icnarc_admissioncensor",       "DMY")

. gen tpp_infec_censor_date           = date("$tpp_infec_censor",         "DMY")

.         
. * Format the dates
. format  enter_date                                      ///
>                 onscoviddeathcensor_date   %td

.                         
.                 
.                         /****   Outcome definitions   ****/
. * Dates of: Primary care case/suspected case, ITU admission, ONS-covid death
. 
. 
. 
. /* CONVERT STRINGS TO DATE====================================================*/
. /* TPP case outcome dates are given with month only, so adding day 
> 15 to enable  them to be processed as dates                                                                                    
>    */
. 
. foreach var of varlist  covid_tpp_probable ///
>                                                 covid_tpp_suspected ///
>                                                 {
  2.                                                         
.                 capture confirm string variable `var'
  3.                 if _rc!=0 {
  4.                         assert `var'==.
  5.                         rename `var' `var'_date
  6.                 }
  7.         
.                 else {
  8.                                 replace `var' = `var' + "-15"
  9.                                 rename `var' `var'_dstr
 10.                                 replace `var'_dstr = " " if `var'_dstr == "-15"
 11.                                 gen `var'_date = date(`var'_dstr, "YMD") 
 12.                                 order `var'_date, after(`var'_dstr)
 13.                                 drop `var'_dstr
 14.                 }
 15.         
.         format `var'_date %td
 16. }
variable covid_tpp_probable was str7 now str10
(16,340,214 real changes made)
(16,294,252 real changes made)
(16,294,252 missing values generated)
variable covid_tpp_suspected was str7 now str10
(16,340,214 real changes made)
(15,713,108 real changes made)
(15,713,108 missing values generated)

. 
. 
. 
. * Recode to dates from the strings 
. foreach var of varlist  died_date_ons   ///
>                                                 icu_date_admitted ///
>                                 {
  2.                                                 
.         confirm string variable `var'
  3.         rename `var' `var'_dstr
  4.         gen `var' = date(`var'_dstr, "YMD")
  5.         drop `var'_dstr
  6.         format `var' %td 
  7.         
. }
(16,262,322 missing values generated)
(16,338,442 missing values generated)

. 
. * Date of Covid death in ONS
. gen died_date_onscovid = died_date_ons if died_ons_covid_flag_any == 1
(16,325,209 missing values generated)

. 
. * Date of non-COVID death in ONS 
. * If missing date of death resulting died_date will also be missing
. gen died_date_onsnoncovid = died_date_ons if died_ons_covid_flag_any != 1 
(16,277,327 missing values generated)

. 
. 
. *Date Covid death in ONS or ITU admission in ICNARC
. gen date_covid_death_itu = min(died_date_onsnoncovid, icu_date_admitted)
(16,275,566 missing values generated)

. *Date probable or suspected covid in TPP
. gen date_covid_tpp_prob_or_susp = min(covid_tpp_probable, covid_tpp_suspected)
(15,684,287 missing values generated)

. *Date probable covid in TPP
. rename covid_tpp_probable date_covid_tpp_prob

. 
. format date_covid_death_itu %td

. format date_covid_tpp_prob_or_susp %td

. 
. format died_date_ons %td

. format died_date_onscovid %td 

. format died_date_onsnoncovid %td

. 
. * Binary indicators for outcomes
. gen covid_death_itu = (date_covid_death_itu < .)

. gen covid_tpp_prob_or_susp = (date_covid_tpp_prob_or_susp < .)

. gen covid_tpp_prob = (date_covid_tpp_prob < .)

. 
. 
. 
.                                         /**** Create survival times  ****/
. * For looping later, name must be stime_binary_outcome_name
. 
. * Survival time = last followup date (first: end study, death, or that outcome)
. *gen stime_onscoviddeath = min(onscoviddeathcensor_date,                                died_date_ons)
. gen stime_covid_death_itu = min(onscoviddeathcensor_date, died_date_ons, date_covid_death_itu)

. gen stime_covid_tpp_prob_or_susp = min(onscoviddeathcensor_date,        died_date_ons, date_covid_tpp_prob_or_susp)

. gen stime_covid_tpp_prob = min(onscoviddeathcensor_date,        died_date_ons, date_covid_tpp_prob)

. 
. 
. * If outcome was after censoring occurred, set to zero
. replace covid_death_itu         = 0 if (date_covid_death_itu    > onscoviddeathcensor_date) 
(0 real changes made)

. replace covid_tpp_prob_or_susp = 0 if (date_covid_tpp_prob_or_susp > onscoviddeathcensor_date)
(3,596 real changes made)

. replace covid_tpp_prob = 0 if (date_covid_tpp_prob > onscoviddeathcensor_date)
(251 real changes made)

. 
. * Format date variables
. format  stime* %td 

. 
. 
. /* LABEL VARIABLES============================================================*/
. *  Label variables you are intending to keep, drop the rest 
. 
. *HH variable
. label var kids_cat3 "Presence of children or young people in the household"

. label var  number_kids "Number of children aged 1-<12 years in household"

. label var  household_size "Number people in household"

. label var  household_id "Household ID"

. 
. 
. * Demographics
. label var patient_id                            "Patient ID"

. label var age                                           "Age (years)"

. label var agegroup                                      "Grouped age"

. label var age66                                         "66 years and older"

. label var sex                                           "Sex"

. label var male                                          "Male"

. label var bmi                                           "Body Mass Index (BMI, kg/m2)"

. label var bmicat                                        "Grouped BMI"

. label var bmi_measured_date             "Body Mass Index (BMI, kg/m2), date measured"

. label var obese4cat                                     "Evidence of obesity (4 categories)"

. label var smoke                                         "Smoking status"

. label var smoke_nomiss                          "Smoking status (missing set to non)"

. label var imd                                           "Index of Multiple Deprivation (IMD)"

. label var ethnicity                                     "Ethnicity"

. label var stp                                           "Sustainability and Transformation Partnership"

. label var age1                                          "Age spline 1"

. label var age2                                          "Age spline 2"

. label var age3                                          "Age spline 3"

. lab var additional_people                       "Number of additional people in household"

. 
. 
. * Comorbidities of interest 
. label var asthma                                                "Asthma category"

. label var egfr_cat                                              "Calculated eGFR"

. label var hypertension                              "Diagnosed hypertension"

. label var chronic_respiratory_disease   "Chronic Respiratory Diseases"

. label var chronic_cardiac_disease               "Chronic Cardiac Diseases"

. label var diabetes                                              "Diabetes"

. label var cancer_haem_cat                                               "Haematological cancer"

. label var cancer_exhaem_cat                                             "Non-haematological cancer"

. label var organ_trans                                   "Solid organ transplant"

. label var asplenia                                              "Asplenia"

. label var other_immuno                                  "Immunosuppressed (combination algorithm)"

. label var chronic_liver_disease                 "Chronic liver disease"

. label var other_neuro                   "Neurological disease"                  

. label var stroke_dementia                           "Stroke or dementia"                                                       
>  

. label var ra_sle_psoriasis                              "Autoimmune disease"

. lab var egfr                                                    eGFR

. lab var perm_immunodef                                  "Permanent immunosuppression"

. lab var temp_immunodef                                  "Temporary immunosuppression"

. 
. label var hypertension_date                                     "Diagnosed hypertension Date"

. label var chronic_respiratory_disease_date      "Other Respiratory Diseases Date"

. label var chronic_cardiac_disease_date          "Other Heart Diseases Date"

. label var diabetes_date                                         "Diabetes Date"

. label var cancer_haem_date                                      "Haem cancer Date"

. label var cancer_nonhaem_date                           "Non-haem cancer Date"

. label var chronic_liver_disease_date            "Chronic liver disease Date"

. label var other_neuro_date              "Neurological disease  Date"

. label var stroke_dementia_date                      "Stroke or dementia date"                                                  
>  

. label var ra_sle_psoriasis_date                         "Autoimmune disease  Date"

. lab var perm_immunodef_date                             "Permanent immunosuppression date"

. lab var temp_immunodef_date                             "Temporary immunosuppression date"

. label var organ_trans_date                                      "Solid organ transplant date"

. label var asplenia_date                                                 "Asplenia date"

. lab var  bphigh "non-missing indicator of known high blood pressure"

. lab var bpcat "Blood pressure four levels, non-missing"

. lab var htdiag_or_highbp "High blood pressure or hypertension diagnosis"

. lab var shield "Probable shielding"

. 
. * Outcomes and follow-up
. label var enter_date                                    "Date of study entry"

. label var onscoviddeathcensor_date              "Date of admin censoring for ONS deaths"

. label var icnarc_admissioncensor_date   "Date of admin censoring for ITU admissions"

. label var tpp_infec_censor_date                 "Date of admin censoring for covid TPP cases"

. 
. label var covid_death_itu                               "Failure/censoring indicator for outcome: covid death/ITU adm."

. label var covid_tpp_prob_or_susp                "Failure/censoring indicator for outcome: covid prob/susp. case"

. label var  covid_tpp_prob                               "Failure/censoring indicator for outcome: covid prob case"

. label var date_covid_death_itu                  "Date of ONS COVID Death or ICNARC ITU admission"

. label var date_covid_tpp_prob_or_susp   "Date of covid TPP case (probable or suspected)"

. label var date_covid_tpp_prob                   "Date of covid TPP case (probable)"

. label var first_tested_for_covid                "Date of first COVID test in SGSS"

. label var first_positive_test_date              "Date of first positive COVID test in SGSS"

. 
. * Survival times
. label var  stime_covid_death_itu                        "Survival time (date); outcome covid death/ITU adm."

. label var  stime_covid_tpp_prob_or_susp         "Survival tme (date); outcome "

. label var  stime_covid_tpp_prob                         "Survival tme (date); outcome "

. 
. *Key DATES
. label var   died_date_ons                               "Date death ONS"

. label var  has_3_m_follow_up                    "Has 3 months follow-up"

. label var  has_12_m_follow_up                   "Has 12 months follow-up"

. 
.  
. 
. 
. 
. 
. 
. /* TIDY DATA==================================================================*/
. *  Drop variables that are not needed (those not labelled)
. ds, not(varlabel)
died_dat~pns  ethnicity_~e  bp_sys_dat~d  creatinine    smoki~s_date  esrf          imd_drop      min           died_~ncovid
died_ons_c~y  bmi_measured  bp_dias       crea~te_date  cancer_haem   asthmacat     bmi_time      max
died_ons_c~g  bp_sys        bp_dias_da~e  crea~ne_date  cancer_non~m  male_drop     bmi_age       icu_date_a~d
covid_tpp_~e  bp_sys_dat~e  bp_dias_da~d  smoki~e_date  esrf_date     age_drop      SCr_adj       died_~scovid

. drop `r(varlist)'

.         
. 
.         
. 
. /* APPLY INCLUSION/EXCLUIONS==================================================*/ 
. 
. 
. 
. noi di "DROP AGE >110:"
DROP AGE >110:

. drop if age > 110 & age != .
(0 observations deleted)

. 
. noi di "DROP THOSE WITHOUT 3 MO FUP"
DROP THOSE WITHOUT 3 MO FUP

. drop if has_3_m_follow_up == .
(0 observations deleted)

. 
. noi di "DROP IF DIED BEFORE INDEX"
DROP IF DIED BEFORE INDEX

. drop if died_date_ons <= date("$indexdate", "DMY")
(487 observations deleted)

. 
. noi di "DROP IF COVID IN TPP BEFORE INDEX"
DROP IF COVID IN TPP BEFORE INDEX

. drop if date_covid_tpp_prob_or_susp <= date("$indexdate", "DMY")
(397 observations deleted)

.         
. noi di "DROP IF DIED/ADMITTED COVID BEFORE INDEX"
DROP IF DIED/ADMITTED COVID BEFORE INDEX

. drop if date_covid_death_itu <= date("$indexdate", "DMY")
(1 observation deleted)

.         
. ***************
. *  Save data  *
. ***************
. sort patient_id

. save $tempdir\analysis_dataset, replace
file tempdata\analysis_dataset.dta saved

. 
. 
. use $tempdir\analysis_dataset, clear

. 
. * Save a version set on CPNS survival outcome
. stset stime_covid_death_itu, fail(covid_death_itu)                              ///
>         id(patient_id) enter(enter_date) origin(enter_date)

                id:  patient_id
     failure event:  covid_death_itu != 0 & covid_death_itu < .
obs. time interval:  (stime_covid_death_itu[_n-1], stime_covid_death_itu]
 enter on or after:  time enter_date
 exit on or before:  failure
    t for analysis:  (time-origin)
            origin:  time enter_date

------------------------------------------------------------------------------
   16339329  total observations
          0  exclusions
------------------------------------------------------------------------------
   16339329  observations remaining, representing
   16339329  subjects
     64,143  failures in single-failure-per-subject data
 2.2164e+09  total analysis time at risk and under observation
                                                at risk from t =         0
                                     earliest observed entry t =         0
                                          last observed exit t =       136

. 
. save "$tempdir\cr_create_analysis_dataset_STSET_covid_death_itu.dta", replace
file tempdata\cr_create_analysis_dataset_STSET_covid_death_itu.dta saved

. 
. 
. use $tempdir\analysis_dataset, clear

. * Save a version set on ONS covid death outcome
. stset stime_covid_tpp_prob_or_susp, fail(covid_tpp_prob_or_susp)                                ///
>         id(patient_id) enter(enter_date) origin(enter_date)

                id:  patient_id
     failure event:  covid_tpp_prob_or_susp != 0 & covid_tpp_prob_or_susp < .
obs. time interval:  (stime_covid_tpp_prob_or_susp[_n-1], stime_covid_tpp_prob_or_susp]
 enter on or after:  time enter_date
 exit on or before:  failure
    t for analysis:  (time-origin)
            origin:  time enter_date

------------------------------------------------------------------------------
   16339329  total observations
          0  exclusions
------------------------------------------------------------------------------
   16339329  observations remaining, representing
   16339329  subjects
    651,933  failures in single-failure-per-subject data
 2.1814e+09  total analysis time at risk and under observation
                                                at risk from t =         0
                                     earliest observed entry t =         0
                                          last observed exit t =       136

.         
. save "$tempdir\cr_create_analysis_dataset_STSET_covid_tpp_prob_or_susp.dta", replace
file tempdata\cr_create_analysis_dataset_STSET_covid_tpp_prob_or_susp.dta saved

. 
. 
. 
. use $tempdir\analysis_dataset, clear

. * Save a version set on ONS covid death outcome
. stset stime_covid_tpp_prob, fail(covid_tpp_prob)                                ///
>         id(patient_id) enter(enter_date) origin(enter_date)

                id:  patient_id
     failure event:  covid_tpp_prob != 0 & covid_tpp_prob < .
obs. time interval:  (stime_covid_tpp_prob[_n-1], stime_covid_tpp_prob]
 enter on or after:  time enter_date
 exit on or before:  failure
    t for analysis:  (time-origin)
            origin:  time enter_date

------------------------------------------------------------------------------
   16339329  total observations
          0  exclusions
------------------------------------------------------------------------------
   16339329  observations remaining, representing
   16339329  subjects
     45,411  failures in single-failure-per-subject data
 2.2147e+09  total analysis time at risk and under observation
                                                at risk from t =         0
                                     earliest observed entry t =         0
                                          last observed exit t =       136

. 
. 
. save "$tempdir\cr_create_analysis_dataset_STSET_covid_tpp_prob.dta", replace
file tempdata\cr_create_analysis_dataset_STSET_covid_tpp_prob.dta saved

.         
.         
. * Close log file 
. log close
      name:  <unnamed>
       log:  E:\alex\school-age-children-and-covid\analysis\log\01_cr_create_analysis_dataset.log
  log type:  text
 closed on:   9 Jul 2020, 00:07:40
---------------------------------------------------------------------------------------------------------------------------------
